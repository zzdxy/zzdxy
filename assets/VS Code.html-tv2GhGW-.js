import{_ as t}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as c,o,c as n,a as i,b as e,d as p,e as r}from"./app-X8k1FHBG.js";const d={},g=i("h1",{id:"vs-code-远程开发实战",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#vs-code-远程开发实战","aria-hidden":"true"},"#"),e(" VS Code 远程开发实战")],-1),l={href:"https://yuyuanweb.feishu.cn/wiki/Abldw5WkjidySxkKxU2cQdAtnah",target:"_blank",rel:"noopener noreferrer"},u={href:"https://codefather.cn",target:"_blank",rel:"noopener noreferrer"},f=r('<blockquote><p>从 0 开始体验一波远程开发</p></blockquote><p>大家好，我是鱼皮。</p><p>记得刚开始学编程的时候，我理所应当地以为只能编辑自己电脑上的代码文件。如果想要修改服务器上的代码，只能先把代码从服务器上拷贝下来，然后在本地修改好再上传到服务器上。</p><p>但是这样效率实在太低了！</p><p>后来我学聪明了，利用 git 在本地和远程之间同步。先在本地修改好代码，<code>git push</code> 推送到 Github 代码托管平台上，再到服务器上 <code>git pull</code> 拉取。虽然方便了不少，不过遇到频繁修改的情况还是很抓狂。</p><figure><img src="https://pic.yupi.icu/5563/202311081005864.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>那有没有更高效的方式，能够保持本地和远程代码的实时同步呢？</p><p>请出今天的主角：远程开发技术，下面我带大家体验一波。</p><h2 id="远程开发实战" tabindex="-1"><a class="header-anchor" href="#远程开发实战" aria-hidden="true">#</a> 远程开发实战</h2><p>本文大纲：</p><figure><img src="https://pic.yupi.icu/5563/202311081005210.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><blockquote><p>鱼皮远程开发实战导图</p></blockquote><h3 id="何为远程开发" tabindex="-1"><a class="header-anchor" href="#何为远程开发" aria-hidden="true">#</a> 何为远程开发？</h3><p>远程是相对于本地的。</p><p>传统开发中，我们都是本地写好代码再放到服务器上运行。</p><p>而远程开发的特点是：</p><ol><li>代码不放在自己电脑上，而是在远程连接的服务器上</li><li>可以在本地直接实时查看和修改远程服务器上的代码</li></ol><p>也就是说，我们可以蹲在家里，用自己的一台电脑去灵活编辑远在天边的服务器上的代码。</p><figure><img src="https://pic.yupi.icu/5563/202311081005716.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><blockquote><p>注意！不要把远程开发理解为远程办公哈哈。</p></blockquote><p>听起来还是挺爽的，有很多种技术可以实现远程开发，比如最古老的远程控制方式。这里推荐大家直接使用开发工具自带的远程开发插件，比如 JetBrains 全家桶和 VS Code。</p><p>由于 VS Code 相对轻量易用，这里带大家实战一波 VS Code 远程开发。</p><figure><img src="https://pic.yupi.icu/5563/202311081005763.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="实战体验" tabindex="-1"><a class="header-anchor" href="#实战体验" aria-hidden="true">#</a> 实战体验</h3><h4 id="_1-安装插件" tabindex="-1"><a class="header-anchor" href="#_1-安装插件" aria-hidden="true">#</a> 1. 安装插件</h4><p>首先打开 VS Code，点击左侧扩展按钮，搜索 &quot;remote&quot;，能够看到一些远程开发插件，支持 SSH 远程连接、连接 Docker 容器、连接Windows 上的 Linux 子系统等。</p><p>这里我们选择下图第二个 <code>Remote - SSH</code> ，点击安装即可：</p><figure><img src="https://pic.yupi.icu/5563/202311081005521.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><blockquote><p>安装插件</p></blockquote><h4 id="_2-远程连接" tabindex="-1"><a class="header-anchor" href="#_2-远程连接" aria-hidden="true">#</a> 2. 远程连接</h4><p>安装好之后，按 <code>ctrl</code> + <code>shift</code> + <code>p</code> 打开命令面板，输入 &quot;remote&quot;，找到 <code>Remote - SSH: Add New SSH Host</code> ，添加一个 SSH 远程连接。</p><figure><img src="https://pic.yupi.icu/5563/202311081005081.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>根据提示输入你要连接的远程服务器的用户名、主机地址（如果没有服务器，在本地启动虚拟机也可以），记得带上 <code>-A</code> 参数（开启代理转发功能）：</p><figure><img src="https://pic.yupi.icu/5563/202311081005014.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>输入连接信息后，选择将该信息保存到一个配置文件中：</p><figure><img src="https://pic.yupi.icu/5563/202311081005074.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>然后连接信息就添加成功了：</p><figure><img src="https://pic.yupi.icu/5563/202311081005929.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>点击 connect 按钮，就连接成功了，在左侧面板中可看到 “已连接到远程”：</p><figure><img src="https://pic.yupi.icu/5563/202311081005089.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="_3-实时浏览" tabindex="-1"><a class="header-anchor" href="#_3-实时浏览" aria-hidden="true">#</a> 3. 实时浏览</h4><p>连接到远程后，我们就可以像操作自己本地电脑一样，浏览远程服务器上的文件。</p><p>比如说我这里进入自己的项目目录：</p><figure><img src="https://pic.yupi.icu/5563/202311081005674.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><blockquote><p>打开文件夹</p></blockquote><p>在左侧可以看到目录下的文件：</p><figure><img src="https://pic.yupi.icu/5563/202311081005515.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="_4-远程编辑" tabindex="-1"><a class="header-anchor" href="#_4-远程编辑" aria-hidden="true">#</a> 4. 远程编辑</h4><p>让我们在编辑器中新建一个文件 <code>test.java</code> ，</p><figure><img src="https://pic.yupi.icu/5563/202311081005670.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>可以使用 XShell 等其他远程 SSH 连接软件访问同一台服务器，进入同一个目录，用 <code>ls</code> 查看目录下的文件，能看到在 VS Code 中新建的 java 文件：</p><figure><img src="https://pic.yupi.icu/5563/202311081005258.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="_5-实时协作" tabindex="-1"><a class="header-anchor" href="#_5-实时协作" aria-hidden="true">#</a> 5. 实时协作</h4><p>我们可以用 VS Code 和其他 SSH 连接软件（如 XShell）来模拟两个用户正在同时协作编写同一个代码文件。</p><p>先在 VS Code 中写下一行优质代码：</p><figure><img src="https://pic.yupi.icu/5563/202311081005228.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>再在 XShell 中编辑该文件，可以立即看到 VS Code 写下的那行代码，在它下面再写一行：</p><figure><img src="https://pic.yupi.icu/5563/202311081005082.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>保存之后，在 VS Code 中就能看到全部代码了：</p><figure><img src="https://pic.yupi.icu/5563/202311081005518.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="_6-端口转发" tabindex="-1"><a class="header-anchor" href="#_6-端口转发" aria-hidden="true">#</a> 6. 端口转发</h4><p>既然我们编辑的代码是在远程的，那代码也是运行在远程的，假如说要查看远程项目的运行效果，怎么办呢？</p><p>VS Code 提供了端口转发功能，可以配置远程服务器和本地端口的映射，以支持本地直接访问到远程服务器的应用。</p><p>按 <code>ctrl</code> + <code>shift</code> + <code>p</code> 打开命令面板，搜索 &quot;forward&quot;，选择转发端口：</p><figure><img src="https://pic.yupi.icu/5563/202311081005687.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>输入要转发的端口号（应用占用的端口），就添加成功了，非常方便！</p><figure><img src="https://pic.yupi.icu/5563/202311081005516.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>然后就能在本地访问运行的项目啦！</p><figure><img src="https://pic.yupi.icu/5563/202311081005419.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="_7-远程调试" tabindex="-1"><a class="header-anchor" href="#_7-远程调试" aria-hidden="true">#</a> 7. 远程调试</h4><p>除了远程编辑代码外，我们可以利用 VS Code 本身的代码提示能力和调试能力。由于远程调试和本地调试几乎没有任何区别，此处不再演示。</p><h3 id="感受" tabindex="-1"><a class="header-anchor" href="#感受" aria-hidden="true">#</a> 感受</h3><p>虽然之前早就听说了远程开发，但一直觉得这玩意配置肯定会很麻烦，而且没啥用。但实际体验下来，不仅安装方便，而且操作友好、基本感受不到延迟，就像在用自己的电脑一样，真心非常爽！</p><figure><img src="https://pic.yupi.icu/5563/202311081005061.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>远程开发有很多好处：</p><ol><li><p>由于代码运行在远程服务器，能够大大节省自己电脑的资源，不会出现多开几个项目电脑就卡如狗的情况。</p></li><li><p>可以多人协同编辑，提高协作效率。</p></li><li><p>不用在本地搭建环境，就能快速上手开发。尤其是一条龙开发、啥都让你干的时候，更爽，比如之前我去紧急支持一个项目的时候，同事有一台开发机，上面有现成的可运行环境和项目代码。下次再遇到这种情况，我就直接连他的服务器远程开发就行了。</p></li><li><p>如果对 Linux 服务器操作不太熟悉，也可以把远程开发当成一个傻瓜式服务器管理软件。</p></li></ol><hr><p>以上就是本期分享，感兴趣的同学可以看下我在 B 站最新发布的 VS Code 远程开发演示视频~（三连 + 评论 “三连了”）抽红包 🧧</p><p>⬇️ 点击下方阅读原文一键跳转到视频</p><p>我是鱼皮，<strong>点赞 + 在看</strong> 还是要求一下的，祝大家都能心想事成、发大财、行大运。</p><figure><img src="https://pic.yupi.icu/5563/202311081005960.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>',81);function h(s,b){const a=c("ExternalLinkIcon");return o(),n("div",null,[g,i("blockquote",null,[i("p",null,[e("本文作者："),i("a",l,[e("程序员鱼皮"),p(a)])]),i("p",null,[e("本站地址："),i("a",u,[e("https://codefather.cn"),p(a)])])]),f])}const _=t(d,[["render",h],["__file","VS Code.html.vue"]]);export{_ as default};
