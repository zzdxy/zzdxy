import{_ as l}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as d,o as t,c as o,a,b as e,d as s,e as i}from"./app-Svquv1Du.js";const r="/zzdxy/assets/9edf4e765f7b9c1e7aa34c667f663557-vyCcaODk.webp",c="/zzdxy/assets/5762059b50b9a217169ca9ebc02b90bd-E-fMtz2w.webp",p="/zzdxy/assets/bed2bee9316c15d75553b80522b8d686-zhfXX4Ff.webp",u="/zzdxy/assets/2726bb06b3ed74295099be252fe59ae7-W_OT_XjQ.webp",h="/zzdxy/assets/39a6d494380610a19da62949d7927967-_ypr7H2K.webp",v="/zzdxy/assets/f44b8d7753c628576920afee7cb73c56-HOIQkJKm.webp",b="/zzdxy/assets/0ea59523b032883f42611d5e49c52513-bndHBRQp.webp",m="/zzdxy/assets/1bbb76ec98a28520bbb4b1b12fded507-nF1FZ2KE.webp",g={},f=i('<h1 id="halo-博客搭建教程" tabindex="-1"><a class="header-anchor" href="#halo-博客搭建教程" aria-hidden="true">#</a> Halo 博客搭建教程</h1><h2 id="前言" tabindex="-1"><a class="header-anchor" href="#前言" aria-hidden="true">#</a> 前言</h2><h3 id="说在前面" tabindex="-1"><a class="header-anchor" href="#说在前面" aria-hidden="true">#</a> 说在前面</h3>',3),k={href:"https://halo.run/",target:"_blank",rel:"noopener noreferrer"},x=a("p",null,"此内容从零到一手把手记录如何搭建，记录自己的搭建过程，也给后面的朋友们提供一个指南，少走些冤枉路，尽快上手。",-1),_=a("h3",{id:"环境配置",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#环境配置","aria-hidden":"true"},"#"),e(" 环境配置")],-1),y=a("p",null,"自己花了 210 左右在 UCloud 买了三年的服务器，然后在腾讯花了将近 200 买了个域名，服务器版本是 Ubuntu 18.04 64 位，理论上讲下面的配置适合于 Ubuntu 系所有版本，个别有出入的地方还请谅解。所以在正式开始之前，你需要满足以下几个条件：",-1),H={href:"https://halo.run/archives/install-with-linux.html",target:"_blank",rel:"noopener noreferrer"},w=a("li",null,"一个域名；",-1),z=a("h2",{id:"java-环境配置",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#java-环境配置","aria-hidden":"true"},"#"),e(" Java 环境配置")],-1),j=a("h3",{id:"安装",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#安装","aria-hidden":"true"},"#"),e(" 安装")],-1),P={href:"https://www.oracle.com/java/technologies/javase-downloads.html",target:"_blank",rel:"noopener noreferrer"},N=i('<figure><img src="'+r+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ol start="2"><li>解压下载后的文件；</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">tar</span> <span class="token parameter variable">-zxvf</span> jdk-11.0.9_linux-x64_bin.tar.gz
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="3"><li>配置环境变量，切换到 root 用户，然后编辑 <code>/etc/profile</code> 文件，添加如下内容（注意路径切换为你自己放置解压缩包后的位置）；</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>export JAVA_HOME=/environment/jdk/jdk-11.0.9
export PATH=$JAVA_HOME/bin:$PATH
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="验证" tabindex="-1"><a class="header-anchor" href="#验证" aria-hidden="true">#</a> 验证</h3><p>安装好之后就是验证是否成功，一般我们用如下命令进行检测；</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 查看 jdk 版本</span>
<span class="token function">java</span> <span class="token parameter variable">-version</span>

<span class="token comment"># 编译命令</span>
javac

<span class="token comment"># 运行命令</span>
<span class="token function">java</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="安装-halo" tabindex="-1"><a class="header-anchor" href="#安装-halo" aria-hidden="true">#</a> 安装 Halo</h2><h3 id="下载-halo-运行包" tabindex="-1"><a class="header-anchor" href="#下载-halo-运行包" aria-hidden="true">#</a> 下载 Halo 运行包</h3><p>要下载 Halo 运行包，可以通过两种方式，更推荐第二种，下载起来更快：</p>`,11),A=a("li",null,"Github releases：https://github.com/halo-dev/halo/releases",-1),I={href:"https://dl.halo.run/",target:"_blank",rel:"noopener noreferrer"},S=i(`<p>利用如下命令进行下载，以 1.4.2 版本为例，如果要下载其他版本，换版本号即可！</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">wget</span> https://dl.halo.run/release/halo-1.4.2.jar
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="`+c+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="配置" tabindex="-1"><a class="header-anchor" href="#配置" aria-hidden="true">#</a> 配置</h3><ol><li>下载配置文件（下载后的文件存放在 <code>~/.halo/application.yaml</code>）；</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token parameter variable">-o</span> ~/.halo/application.yaml --create-dirs https://dl.halo.run/config/application-template.yaml
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,6),q={start:"2"},E={href:"https://halo.run/archives/install-with-linux.html",target:"_blank",rel:"noopener noreferrer"},J=i(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>server:
  port: <span class="token number">8090</span>

  <span class="token comment"># Response data gzip.</span>
  compression:
    enabled: <span class="token boolean">false</span>
spring:
  datasource:
    <span class="token comment"># H2 database configuration.</span>
    driver-class-name: org.h2.Driver
    url: jdbc:h2:file:~/.halo/db/halo
    username: admin
    password: <span class="token number">123456</span>

    <span class="token comment"># MySQL database configuration.</span>
  <span class="token comment">#    driver-class-name: com.mysql.cj.jdbc.Driver</span>
  <span class="token comment">#    url: jdbc:mysql://127.0.0.1:3306/halodb?characterEncoding=utf8&amp;useSSL=false&amp;serverTimezone=Asia/Shanghai&amp;allowPublicKeyRetrieval=true</span>
  <span class="token comment">#    username: root</span>
  <span class="token comment">#    password: 123456</span>

  <span class="token comment"># H2 database console configuration.</span>
  h2:
    console:
      settings:
        web-allow-others: <span class="token boolean">false</span>
      path: /h2-console
      enabled: <span class="token boolean">false</span>

halo:
  <span class="token comment"># Your admin client path is https://your-domain/{admin-path}</span>
  admin-path: admin

  <span class="token comment"># memory or level</span>
  cache: memory
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="运行-halo" tabindex="-1"><a class="header-anchor" href="#运行-halo" aria-hidden="true">#</a> 运行 Halo</h3><p>配置好 Java 环境，同时下载好 Halo 运行包之后，我们就可以使用如下命令运行了；</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">java</span> <span class="token parameter variable">-jar</span> halo-latest.jar
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>然后在本地浏览器中访问如下地址即可；</p><blockquote><p>http://ip:8090</p></blockquote><h2 id="进阶配置" tabindex="-1"><a class="header-anchor" href="#进阶配置" aria-hidden="true">#</a> 进阶配置</h2><h3 id="开机自启" tabindex="-1"><a class="header-anchor" href="#开机自启" aria-hidden="true">#</a> 开机自启</h3><ol><li>下载 Halo 官方 <code>service</code> 模板，然后对其进行修改（此时需要管理员权限）；</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">curl</span> <span class="token parameter variable">-o</span> /etc/systemd/system/halo.service --create-dirs https://dl.halo.run/config/halo.service
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2"><li>修改配置文件</li></ol>`,11),K={href:"https://halo.run/archives/install-with-linux.html",target:"_blank",rel:"noopener noreferrer"},O=i(`<p>需要注意的几点：</p><ul><li>填写你的 JDK 绝对路径；</li><li>填写你的 Halo 运行包所在绝对路径；</li><li>填写运行 Halo 服务的用户名；</li></ul><ol start="3"><li>测试</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 修改 service 后需要 Systemd</span>
<span class="token function">sudo</span> systemctl daemon-reload

<span class="token comment"># 使 Halo 开机自启</span>
<span class="token function">sudo</span> systemctl <span class="token builtin class-name">enable</span> halo

<span class="token comment"># 启动 Halo</span>
<span class="token function">sudo</span> <span class="token function">service</span> halo start

<span class="token comment"># 重启 Halo</span>
<span class="token function">sudo</span> <span class="token function">service</span> halo restart

<span class="token comment"># 停止 Halo</span>
<span class="token function">sudo</span> <span class="token function">service</span> halo stop

<span class="token comment"># 查看 Halo 的运行状态</span>
<span class="token function">sudo</span> <span class="token function">service</span> halo status
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="halo-更新" tabindex="-1"><a class="header-anchor" href="#halo-更新" aria-hidden="true">#</a> Halo 更新</h3><p>Halo 是一个活跃的社区，目前一直在开发迭代中，后续如果发布了新的版本，而我们又想要升级，这时候就可以按照如下步骤来进行操作了；</p><ol><li>首先，我们需要对我们原有数据进行备份，防止丢失</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">cp</span> <span class="token parameter variable">-r</span> ~/.halo ~/.halo.bak
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2"><li>接着备份久的 Halo 安装包，防止新的安装包出现问题后无法回滚；</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">mv</span> halo-latest.jar halo-latest.jar.bak
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="3"><li>做好备份工作之后，就是下载最新的 Halo 安装包了，其中 <code>{{verison}}</code> 对应最新版本号；</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">wget</span> https://dl.halo.run/release/halo-<span class="token punctuation">{</span><span class="token punctuation">{</span>version<span class="token punctuation">}</span><span class="token punctuation">}</span>.jar <span class="token parameter variable">-O</span> halo-latest.jar
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="4"><li>测试一下最新版的 Halo 能否运行成功；</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">java</span> <span class="token parameter variable">-jar</span> halo-latest.jar
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="5"><li>测试步骤如果成功了，那我们直接重启 Halo 服务就好了；</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">service</span> halo restart
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="域名访问" tabindex="-1"><a class="header-anchor" href="#域名访问" aria-hidden="true">#</a> 域名访问</h2><p>通过上面的配置之后，我们只能通过 <code>ip:port</code> 的方式进行访问，如果我们想让别人来访问，那么有一个域名就十分有必要了。在正式进行配置域名之前，需要确保如下几件准备工作：</p><ol><li>Halo 已经能够正确运行，且运行端口不是 <code>80</code> 端口；</li><li>确保域名解析到服务器 IP，而且确保服务器已经备案（国内服务器都需要，国外无需）；</li><li>打开服务器的 <code>80</code> 和 <code>443</code> 端口；</li></ol><h3 id="配置域名解析服务器-ip" tabindex="-1"><a class="header-anchor" href="#配置域名解析服务器-ip" aria-hidden="true">#</a> 配置域名解析服务器 IP</h3><p>因为我的域名是在腾讯买的，所以这里以腾讯为例；</p>`,21),D={href:"https://console.cloud.tencent.com/cns",target:"_blank",rel:"noopener noreferrer"},F=i('<figure><img src="'+p+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ol start="2"><li>接着添加记录；</li></ol><figure><img src="'+u+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>添加如下两条记录，其他字段保持默认即可；</p><table><thead><tr><th>主机记录</th><th>记录类型</th><th>记录值</th></tr></thead><tbody><tr><td><code>@</code></td><td><code>A</code></td><td>你的服务器 IP</td></tr><tr><td><code>www</code></td><td><code>A</code></td><td>你的服务器 IP</td></tr></tbody></table><h3 id="打开服务器对应端口" tabindex="-1"><a class="header-anchor" href="#打开服务器对应端口" aria-hidden="true">#</a> 打开服务器对应端口</h3><ol><li>登录你的服务器，然后打开主机管理界面；</li><li>接着编辑防火墙，将需要打开的端口打开即可，一般打开如下的协议端口就可以了；</li></ol><ul><li>ICMP</li><li>3389</li><li>80</li><li>443</li><li>21</li><li>22</li><li>8090</li></ul><figure><img src="'+h+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="利用-nginx-进行反向代理" tabindex="-1"><a class="header-anchor" href="#利用-nginx-进行反向代理" aria-hidden="true">#</a> 利用 Nginx 进行反向代理</h3><ol><li>安装 Nginx</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> nginx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2"><li>设置开机自启动 Nginx</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>systemctl <span class="token builtin class-name">enable</span> nginx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="3"><li>启动 Nginx</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">service</span> nginx start
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="4"><li>配置 Nginx</li></ol><p>首先下载 Halo 官方的 Nginx 配置模板；</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token parameter variable">-o</span> /etc/nginx/conf.d/halo.conf --create-dirs https://dl.halo.run/config/nginx.conf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>然后对其进行修改；</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">vim</span> /etc/nginx/conf.d/halo.conf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>只需要将其中的 <code>example.com</code> 修改成自己的域名即可，比如我的域名是 <code>cunyu1943.site</code>；</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>server <span class="token punctuation">{</span>
    listen <span class="token number">80</span><span class="token punctuation">;</span>

    server_name example.com www.example.com<span class="token punctuation">;</span>

    location / <span class="token punctuation">{</span>
        proxy_set_header HOST <span class="token variable">$host</span><span class="token punctuation">;</span>
        proxy_set_header X-Forwarded-Proto <span class="token variable">$scheme</span><span class="token punctuation">;</span>
        proxy_set_header X-Real-IP <span class="token variable">$remote_addr</span><span class="token punctuation">;</span>
        proxy_set_header X-Forwarded-For <span class="token variable">$proxy_add_x_forwarded_for</span><span class="token punctuation">;</span>

        proxy_pass http://127.0.0.1:8090/<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="5"><li>自动配置 SSL 证书</li></ol><p>首先安装 certbot nginx 插件；</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> python-certbot-nginx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>接着执行配置，过程中会询问为哪个域名添加证书，以及是否重定向，如实选择即可；</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> certbot <span class="token parameter variable">--nginx</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="`+v+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+b+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>最后，设置自动续约即可；</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> certbot renew --dry-run
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="`+m+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ol start="6"><li>完成上述步骤之后，大功告成了，我们就可以通过自己的域名来访问自己的博客了，比如我的博客就是：</li></ol><blockquote><p>https://cunyu1943.site</p></blockquote><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h2><p>好了，经过上面的一系列设置，我们的博客就搭建完成了，是不是好简单的说，那就别犹豫，赶紧动手搞起来吧！</p><p>最后再贴以下自己的博客地址，欢迎大家来留言，交换友链呀！</p><blockquote><p>https://cunyu1943.site</p></blockquote>',39);function T(V,X){const n=d("ExternalLinkIcon");return t(),o("div",null,[f,a("p",null,[e("之前一直有在各大平台发布博客内容，然后个人博客一直使用的是 Hexo + Github Pages 的方式，但随着内容增多，Github Pages 访问的也不稳定，所以想着自己搞个服务器和域名搭个博客，最终选定 "),a("a",k,[e("Halo"),s(n)]),e(" 这个博客框架，搭建属于自己的博客。")]),x,_,y,a("ol",null,[a("li",null,[e("一台 Ubuntu 系统的服务器（Centos 系统的参考 "),a("a",H,[e("官网教程"),s(n)]),e(" 即可）；")]),w]),z,j,a("ol",null,[a("li",null,[e("首先去 "),a("a",P,[e("官网"),s(n)]),e(" 下载 JDK，选择自己想要的版本即可，一般推荐 JDK 1.8+ 的版本；")])]),N,a("ol",null,[A,a("li",null,[e("Nova 提供的下载站："),a("a",I,[e("https://dl.halo.run"),s(n)])])]),S,a("ol",q,[a("li",null,[e("修改配置，参考 "),a("a",E,[e("官方文档"),s(n)]),e(" 修改即可；")])]),J,a("p",null,[e("具体可以参考 "),a("a",K,[e("官方文档"),s(n)]),e("；")]),O,a("ol",null,[a("li",null,[e("首先打开 "),a("a",D,[e("域名解析列表"),s(n)]),e("，并点击右侧解析进入解析界面；")])]),F])}const L=l(g,[["render",T],["__file","20201228-halo.html.vue"]]);export{L as default};
