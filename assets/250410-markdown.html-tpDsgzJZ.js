import{_ as i}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as t,o as r,c,a as n,b as e,d as s,e as o}from"./app-Svquv1Du.js";const d={},u=o(`<h1 id="markdown语法" tabindex="-1"><a class="header-anchor" href="#markdown语法" aria-hidden="true">#</a> markdown语法</h1><div class="hint-container info"><p class="hint-container-title">共勉</p><p>不要哀求，学会争取。若是如此，终有所获。</p></div><h2 id="字体" tabindex="-1"><a class="header-anchor" href="#字体" aria-hidden="true">#</a> 字体</h2><p>Markdown 可以使用以下几种字体：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>*斜体文本*
_斜体文本_
**粗体文本**
__粗体文本__
***粗斜体文本***
___粗斜体文本___
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><em>斜体文本</em><em>斜体文本</em><strong>粗体文本</strong><strong>粗体文本</strong><em><strong>粗斜体文本</strong></em><em><strong>粗斜体文本</strong></em></p><h2 id="分隔线" tabindex="-1"><a class="header-anchor" href="#分隔线" aria-hidden="true">#</a> 分隔线</h2><p>你可以在一行中用三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。你也可以在星号或是减号中间插入空格。下面每种写法都可以建立分隔线：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>
***
* * *
*****
- - -
----------

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><hr><hr><hr><hr><p>Markdown 支持有序列表和无序列表。</p><p>无序列表使用星号(*)、加号(+)或是减号(-)作为列表标记，这些标记后面要添加一个空格，然后再填写内容：</p><ul><li>第一项</li><li>第二项</li><li>第三项</li></ul><ul><li>第一项</li><li>第二项</li><li>第三项</li></ul><ul><li>第一项</li><li>第二项</li><li>第三项</li></ul><p>有序列表使用数字并加上 . 号来表示，如：</p><ol><li>第一项</li><li>第二项</li><li>第三项</li></ol><p>列表嵌套 列表嵌套只需在子列表中的选项前面添加两个或四个空格即可：</p><ol><li>第一项： <ul><li>第一项嵌套的第一个元素</li><li>第一项嵌套的第二个元素</li></ul></li><li>第二项： <ul><li>第二项嵌套的第一个元素</li><li>第二项嵌套的第二个元素</li></ul></li></ol><p>Markdown 区块 Markdown 区块引用是在段落开头使用 &gt; 符号 ，然后后面紧跟一个空格符号：</p><blockquote><p>区块引用 菜鸟教程 学的不仅是技术更是梦想</p></blockquote><blockquote><p>最外层</p><blockquote><p>第一层嵌套</p><blockquote><p>第二层嵌套</p></blockquote></blockquote></blockquote><blockquote><p>区块中使用列表</p><ol><li>第一项</li><li>第二项</li></ol><ul><li>第一项</li><li>第二项</li><li>第三项</li></ul></blockquote><ul><li>第一项 <blockquote><p>菜鸟教程 学的不仅是技术更是梦想</p></blockquote></li><li>第二项</li></ul><p>Markdown 代码 如果是段落上的一个函数或片段的代码可以用反引号把它包起来（\`），例如：</p><p><code>printf()</code> 函数</p><p>代码区块 代码区块使用 4 个空格或者一个制表符（Tab 键）。</p><p>实例如下：</p><p>web 123</p><p>你也可以用 \`\`\` 包裹一段代码，并指定一种语言（也可以不指定）：</p><p>Markdown 链接 链接使用方法如下：</p><p><a href="%E9%93%BE%E6%8E%A5%E5%9C%B0%E5%9D%80">链接名称</a></p><p>或者</p><p>&lt;链接地址&gt;</p>`,38),k={href:"http://www.google.com/",target:"_blank",rel:"noopener noreferrer"},b={href:"http://www.runoob.com/",target:"_blank",rel:"noopener noreferrer"},m=o('<table><thead><tr><th>表头</th><th>表头</th></tr></thead><tbody><tr><td>单元格</td><td>单元格</td></tr><tr><td>单元格</td><td>单元格</td></tr></tbody></table><table><thead><tr><th style="text-align:left;">左对齐</th><th style="text-align:right;">右对齐</th><th style="text-align:center;">居中对齐</th></tr></thead><tbody><tr><td style="text-align:left;">单元格</td><td style="text-align:right;">单元格</td><td style="text-align:center;">单元格</td></tr><tr><td style="text-align:left;">单元格</td><td style="text-align:right;">单元格</td><td style="text-align:center;">单元格</td></tr></tbody></table><p>使用 <kbd>Ctrl</kbd>+<kbd>Alt</kbd>+<kbd>Del</kbd> 重启电脑</p><p>以下几个实例效果图如下：</p><p>1、横向流程图源码格式：</p>',5),v=n("p",null,"2、竖向流程图源码格式：",-1),h=o(`<p>3、标准流程图源码格式：</p><div class="language-flow line-numbers-mode" data-ext="flow"><pre class="language-flow"><code>st<span class="token operator">=&gt;</span>start<span class="token operator">:</span> 开始框
op<span class="token operator">=&gt;</span>operation<span class="token operator">:</span> 处理框
cond<span class="token operator">=&gt;</span>condition<span class="token operator">:</span> <span class="token function">判断框</span><span class="token punctuation">(</span>是或否<span class="token operator">?</span><span class="token punctuation">)</span>
sub1<span class="token operator">=&gt;</span>subroutine<span class="token operator">:</span> 子流程
io<span class="token operator">=&gt;</span>inputoutput<span class="token operator">:</span> 输入输出框
e<span class="token operator">=&gt;</span>end<span class="token operator">:</span> 结束框
st<span class="token operator">-</span><span class="token operator">&gt;</span>op<span class="token operator">-</span><span class="token operator">&gt;</span>cond
<span class="token function">cond</span><span class="token punctuation">(</span>yes<span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">&gt;</span>io<span class="token operator">-</span><span class="token operator">&gt;</span>e
<span class="token function">cond</span><span class="token punctuation">(</span>no<span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">sub1</span><span class="token punctuation">(</span>right<span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">&gt;</span>op
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>4、标准流程图源码格式（横向）：</p><div class="language-flow line-numbers-mode" data-ext="flow"><pre class="language-flow"><code>st<span class="token operator">=&gt;</span>start<span class="token operator">:</span> 开始框
op<span class="token operator">=&gt;</span>operation<span class="token operator">:</span> 处理框
cond<span class="token operator">=&gt;</span>condition<span class="token operator">:</span> <span class="token function">判断框</span><span class="token punctuation">(</span>是或否<span class="token operator">?</span><span class="token punctuation">)</span>
sub1<span class="token operator">=&gt;</span>subroutine<span class="token operator">:</span> 子流程
io<span class="token operator">=&gt;</span>inputoutput<span class="token operator">:</span> 输入输出框
e<span class="token operator">=&gt;</span>end<span class="token operator">:</span> 结束框
<span class="token function">st</span><span class="token punctuation">(</span>right<span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">op</span><span class="token punctuation">(</span>right<span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">&gt;</span>cond
<span class="token function">cond</span><span class="token punctuation">(</span>yes<span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">io</span><span class="token punctuation">(</span>bottom<span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">&gt;</span>e
<span class="token function">cond</span><span class="token punctuation">(</span>no<span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">&gt;</span><span class="token function">sub1</span><span class="token punctuation">(</span>right<span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">&gt;</span>op
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>5、UML时序图源码样例：</p>`,5),g=n("p",null,"6、UML时序图源码复杂样例：",-1),w=n("p",null,"7、UML标准时序图样例：",-1),f=n("p",null,"8、甘特图样例：",-1),x=n("p",null,"效果图如下：",-1),_=n("p",null,"flow st=>start: 开始框 op=>operation: 处理框 cond=>condition: 判断框(是或否?) sub1=>subroutine: 子流程 io=>inputoutput: 输入输出框 e=>end: 结束框 st->op->cond cond(yes)->io->e cond(no)->sub1(right)->op",-1),F=n("p",null,[e("mermaid %% 时序图例子,-> 直线，-->虚线，->>实线箭头 sequenceDiagram participant 张三 participant 李四 张三->王五: 王五你好吗？ loop 健康检查 王五->王五: 与疾病战斗 end Note right of 王五: 合理 食物 "),n("br"),e("看医生... 李四-->>张三: 很好! 王五->李四: 你怎么样? 李四-->王五: 很好!")],-1),X=n("p",null,"v",-1);function y(J,q){const p=t("ExternalLinkIcon"),a=t("Mermaid"),l=t("Share");return r(),c("div",null,[u,n("p",null,[e("这个链接用 1 作为网址变量 "),n("a",k,[e("Google"),s(p)]),e(" 这个链接用 runoob 作为网址变量 "),n("a",b,[e("Runoob"),s(p)]),e(" 然后在文档的结尾为变量赋值（网址）")]),m,s(a,{id:"mermaid-331",code:"eJxLL0osyFDwCeJyjH42befTvYtiFXR17Zw0ns5pe7F8kiaXAhA4gYQUnKufzV34ZPe2xFqwoDNIsCbR1rBGwSX6+e7Jz+bNMYxFkTGqUXCFyhhBZNyin61Y9XTCxGdbG5+v6H46e18sFwBV8DOc"}),v,s(a,{id:"mermaid-335",code:"eJxLL0osyFAIceFyjH42befTvYtiFXR17RScNJ7OaXuxfJImlwIQOIHFnKufzV34ZPe2xFqwoDNYsCbR1rBGwSX6+e7Jz+bNMYxFlTKqUXCFShlBpNyin6+e9nTCxGdbG5+v6H46e18sFwCtVDPm"}),h,s(a,{id:"mermaid-347",code:"eJwrTi0sTc1LTnXJTEwvSszlUlB4un7ni40LHXXtIAwnK6iI05O9C54u3ft0wnT793s6Xqzf/mxj0/s9nUAdfvklqQpFmekZJQr5aTDVcG3PZ7U86+9/sX8DTGVOahqSQkeYQke4Qo1n/ROeL9mlCXeMky7MNUDVzzomPt3XAXSJxtPJvU93TUEoQ3Yz0LHP58wHGglx8vs987kA/PyBsw=="}),g,s(a,{id:"mermaid-351",code:"eJwrTi0sTc1LTnXJTEwvSszlUlAIySzJSbVSeLag/eWiGe/3zHq6pPfZ3KYne/c/n7ICKP10/c4XGxc66tpBGE5WUBGnJ3sXPF269+mE6fbv93S8WL/92cam93s6gTr88ktSFYoy0zNKFPLTYKrh2p7PannW3/9i/waYypzUNCSFjjCFjnCFGs/6JzxfsksT7hgnXZhrgKqfdUx8uq8D6BKNp5N7n+6agqzM7umG/ic7Oq0U4G4FSYLFgEYgzICqf9a5D2jak11tWL0NNOP5nPlAV0FMer9nPswH+WWpRVBjdeDKQSbtXvNsxvpnc7qf9ncD1RYkFpVkJmcWJOaVKDhjhJMzUMumhU927Xo5cxVQ7/O+lVwAqBjnsg=="}),w,s(a,{id:"mermaid-355",code:"eJxlkLFOwzAQhnee4hi6kbJXyCzMvEMooUSCJISwlwGUKlXIUDVAgEQqGRjaqaIlJOFlfDZMfQWMHUAIL3f6/X93v67VAhY/Y3GFSU3rAKfRhkaAJ3NevK3KoaaR95vbpicEZw+i57MpPs7XAE6NkzPD6ho7pt5z9WOhADi665ld09EtD7DM6HLwT2b3ISaJlJVDIzwMaDHqgKq0yjCvMIpXZSptR7btAJ7nWCzYpM/SXKpfTwG/A+gy5OOaxxfMv2bjWPoMa1/WXdszwDV7hx7YBw3ZAYx8Hl3CxyTlgyfY2nM3Cb8LcPjKR2m73ZakSiyOQVRgQdW+iLguf78zKJfIUGWsH9IXn2WL7b/8z9IG/wRyXsBx"}),f,s(a,{id:"mermaid-359",code:"eJyN0tFLwkAcB/B3/4p78W0DpyusZwl68LGHHg9dKZSCHj1LgdJGlpAQaJqkBYFKRIKZ/jW72/VfdHrb7YrpvKfdbfe5+31/i0YBHQ/JR9Ppf9kLKwLccQoLCIlZFiLjoFg6hwiAYzbUdFpNpcRrlEdnBqDzsT2b4O8Kvm049w/O9RS3FuKbspFB+WIB0NGCjnpi+addIe+X3uzv2M8WC4ayOt8oawqIxzRdjWlqbFcRj0kh4XoXd6w1EmSHXywtJsUlaU8Biawgjg757YIN8cSMhALgCTJKrrfDDdJ+I48DezbD5haGLhnMcw05K56lX+HwxZ4+4VoV92vOXZW+Pm9ML1PKIwXwDOXo9JwQebmkVyWdSbAShMmVx/1b89tuZCTK64gUf2h8/w0pMlq5CT2Z7ZOu64VMPi06bvpVmF16NeeLIZhXAmT/ptxJqSRct7DZ2kZj3IqAGgDLfvlN4ruJOcANM8wAejIX+QU/XRNk"}),x,s(a,{id:"mermaid-363",code:"eJxLL0osyFDwCeJyjH42befTvYtiFXR17Zw0ns5pe7F8kiaXAhA4gYQUnKufzV34ZPe2xFqwoDNIsCbR1rBGwSX6+e7Jz+bNMYxFkTGqUXCFyhhBZNyin61Y9XTCxGdbG5+v6H46e18sFwBV8DOc"}),s(a,{id:"mermaid-364",code:"eJxLL0osyFAIceFyjH42befTvYtiFXR17RScNJ7OaXuxfJImlwIQOIHFnKufzV34ZPe2xFqwoDNYsCbR1rBGwSX6+e7Jz+bNMYxFlTKqUXCFShlBpNyin6+e9nTCxGdbG5+v6H46e18sFwCtVDPm"}),_,F,X,s(l,{colorful:""})])}const C=i(d,[["render",y],["__file","250410-markdown.html.vue"]]);export{C as default};
