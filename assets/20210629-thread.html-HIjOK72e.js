const e=JSON.parse('{"key":"v-e2db0b78","path":"/interview/knowledge/20210629-thread.html","title":"多线程面试知识点","lang":"zh-CN","frontmatter":{"isOriginal":true,"category":"求职面试","tag":["面试","多线程"],"description":"1. 进程和线程 1.1 进程 进程是系统中正在运行的一个程序，是 资源分配的基本单位，每个进程都有独立的地址空间。 进程控制块（Process Control Block，PCB）描述了进程的基本信息和运行状态，所谓的创建和撤销进程，都是指对于 PCB 的操作； 1.2 线程 线程是 独立调度的基本单位，被包含在进程中，是进程中的实际运作单位。一个进...","head":[["meta",{"property":"og:url","content":"https://cunyu1943.github.io/zzdxy/interview/knowledge/20210629-thread.html"}],["meta",{"property":"og:site_name","content":"JavaPark"}],["meta",{"property":"og:title","content":"多线程面试知识点"}],["meta",{"property":"og:description","content":"1. 进程和线程 1.1 进程 进程是系统中正在运行的一个程序，是 资源分配的基本单位，每个进程都有独立的地址空间。 进程控制块（Process Control Block，PCB）描述了进程的基本信息和运行状态，所谓的创建和撤销进程，都是指对于 PCB 的操作； 1.2 线程 线程是 独立调度的基本单位，被包含在进程中，是进程中的实际运作单位。一个进..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-03-31T04:12:26.000Z"}],["meta",{"property":"article:author","content":"村雨遥"}],["meta",{"property":"article:tag","content":"面试"}],["meta",{"property":"article:tag","content":"多线程"}],["meta",{"property":"article:modified_time","content":"2025-03-31T04:12:26.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"多线程面试知识点\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-03-31T04:12:26.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"村雨遥\\",\\"url\\":\\"https://cunyu1943.github.io\\",\\"email\\":\\"747731461@qq.com\\"}]}"]]},"headers":[{"level":2,"title":"1. 进程和线程","slug":"_1-进程和线程","link":"#_1-进程和线程","children":[{"level":3,"title":"1.1 进程","slug":"_1-1-进程","link":"#_1-1-进程","children":[]},{"level":3,"title":"1.2 线程","slug":"_1-2-线程","link":"#_1-2-线程","children":[]},{"level":3,"title":"1.3 进程和线程的区别？","slug":"_1-3-进程和线程的区别","link":"#_1-3-进程和线程的区别","children":[]},{"level":3,"title":"1.4 线程分类","slug":"_1-4-线程分类","link":"#_1-4-线程分类","children":[]}]},{"level":2,"title":"2. 如何创建线程实例并运行","slug":"_2-如何创建线程实例并运行","link":"#_2-如何创建线程实例并运行","children":[{"level":3,"title":"2.1 创建 Thread 的子类并重写 run()","slug":"_2-1-创建-thread-的子类并重写-run","link":"#_2-1-创建-thread-的子类并重写-run","children":[]},{"level":3,"title":"2.2 实现 Runnable 接口","slug":"_2-2-实现-runnable-接口","link":"#_2-2-实现-runnable-接口","children":[]}]},{"level":2,"title":"3. Runnable vs Callable","slug":"_3-runnable-vs-callable","link":"#_3-runnable-vs-callable","children":[{"level":3,"title":"3.1 Runnable","slug":"_3-1-runnable","link":"#_3-1-runnable","children":[]},{"level":3,"title":"3.2 Callable","slug":"_3-2-callable","link":"#_3-2-callable","children":[]}]},{"level":2,"title":"4. 并发 vs 并行","slug":"_4-并发-vs-并行","link":"#_4-并发-vs-并行","children":[{"level":3,"title":"4.1 并发","slug":"_4-1-并发","link":"#_4-1-并发","children":[]},{"level":3,"title":"4.2 并行","slug":"_4-2-并行","link":"#_4-2-并行","children":[]}]},{"level":2,"title":"5. 4 种线程池","slug":"_5-4-种线程池","link":"#_5-4-种线程池","children":[{"level":3,"title":"5.1 newCachedThreadPool","slug":"_5-1-newcachedthreadpool","link":"#_5-1-newcachedthreadpool","children":[]},{"level":3,"title":"5.2 newFixedThreadPool","slug":"_5-2-newfixedthreadpool","link":"#_5-2-newfixedthreadpool","children":[]},{"level":3,"title":"5.3 newScheduledThreadPool","slug":"_5-3-newscheduledthreadpool","link":"#_5-3-newscheduledthreadpool","children":[]},{"level":3,"title":"5.4 newSingleThreadExecutor","slug":"_5-4-newsinglethreadexecutor","link":"#_5-4-newsinglethreadexecutor","children":[]}]},{"level":2,"title":"6. 线程生命周期及状态","slug":"_6-线程生命周期及状态","link":"#_6-线程生命周期及状态","children":[{"level":3,"title":"6.1 线程状态","slug":"_6-1-线程状态","link":"#_6-1-线程状态","children":[]},{"level":3,"title":"6.2 线程阻塞的三种情况","slug":"_6-2-线程阻塞的三种情况","link":"#_6-2-线程阻塞的三种情况","children":[]},{"level":3,"title":"6.3 线程死亡的三种方式","slug":"_6-3-线程死亡的三种方式","link":"#_6-3-线程死亡的三种方式","children":[]},{"level":3,"title":"6.4 终止线程的 4 种方式","slug":"_6-4-终止线程的-4-种方式","link":"#_6-4-终止线程的-4-种方式","children":[]}]},{"level":2,"title":"7. 上下文切换","slug":"_7-上下文切换","link":"#_7-上下文切换","children":[{"level":3,"title":"7.1 上下文切换活动","slug":"_7-1-上下文切换活动","link":"#_7-1-上下文切换活动","children":[]},{"level":3,"title":"7.2 上下文切换的原因","slug":"_7-2-上下文切换的原因","link":"#_7-2-上下文切换的原因","children":[]}]},{"level":2,"title":"8. 锁","slug":"_8-锁","link":"#_8-锁","children":[{"level":3,"title":"8.1 锁的分类","slug":"_8-1-锁的分类","link":"#_8-1-锁的分类","children":[]},{"level":3,"title":"8.2 锁的优化","slug":"_8-2-锁的优化","link":"#_8-2-锁的优化","children":[]},{"level":3,"title":"8.3 线程死锁","slug":"_8-3-线程死锁","link":"#_8-3-线程死锁","children":[]},{"level":3,"title":"8.4 如何避免死锁","slug":"_8-4-如何避免死锁","link":"#_8-4-如何避免死锁","children":[]}]},{"level":2,"title":"9. 线程常用方法","slug":"_9-线程常用方法","link":"#_9-线程常用方法","children":[{"level":3,"title":"9.1 基本方法","slug":"_9-1-基本方法","link":"#_9-1-基本方法","children":[]},{"level":3,"title":"9.2 sleep() 和 wait() 的区别","slug":"_9-2-sleep-和-wait-的区别","link":"#_9-2-sleep-和-wait-的区别","children":[]},{"level":3,"title":"9.3 start() 和 run() 的区别","slug":"_9-3-start-和-run-的区别","link":"#_9-3-start-和-run-的区别","children":[]},{"level":3,"title":"9.4 ThreadLocal（线程本地存储）","slug":"_9-4-threadlocal-线程本地存储","link":"#_9-4-threadlocal-线程本地存储","children":[]},{"level":3,"title":"9.5 volatile 和 synchronized 的区别","slug":"_9-5-volatile-和-synchronized-的区别","link":"#_9-5-volatile-和-synchronized-的区别","children":[]}]}],"git":{"createdTime":1743394346000,"updatedTime":1743394346000,"contributors":[{"name":"zzdxy","email":"jiefav@163.com","commits":1}]},"readingTime":{"minutes":21.13,"words":6340},"filePathRelative":"interview/knowledge/20210629-thread.md","localizedDate":"2025年3月31日","copyright":{"author":"村雨遥","license":"著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处"},"autoDesc":true,"excerpt":""}');export{e as data};
