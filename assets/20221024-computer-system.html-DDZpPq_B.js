import{_ as n}from"./wechatpublic-eLo-9ai1.js";import{_ as e}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as m,o as c,c as i,d as p,e as l,a as s,b as a}from"./app-X8k1FHBG.js";const r="/zzdxy/assets/05e053d26fec47c0886cb4839ca49c6d-CMaqKfHo.webp",o="/zzdxy/assets/723bfe1551fe469da4c91eb4cd7caad5-bCM3x6zo.webp",h="/zzdxy/assets/e216c374cc7347749c5cdbdb6c7013a3-beNx0q1i.webp",d="/zzdxy/assets/b9cf4906aaf944b5a12996b3f5f3a5de-ldZ1ZhNw.webp",g={},u=l('<h1 id="计算机系统" tabindex="-1"><a class="header-anchor" href="#计算机系统" aria-hidden="true">#</a> 计算机系统</h1><div class="hint-container info"><p class="hint-container-title">共勉</p><p>不要哀求，学会争取。若是如此，终有所获。</p></div><h2 id="cpu" tabindex="-1"><a class="header-anchor" href="#cpu" aria-hidden="true">#</a> CPU</h2><h3 id="计算机系统硬件组成" tabindex="-1"><a class="header-anchor" href="#计算机系统硬件组成" aria-hidden="true">#</a> 计算机系统硬件组成</h3><p>计算机系统是由软硬件共同组成，协同运行程序。计算机的基本硬件由 <strong>运算器、控制器、存储器、输入设备、输出设备</strong> 5 大部件组成。其中，运算器和控制器等部件集成到一起的部分称为中央处理器（<code>CPU</code>）。<code>CPU</code> 是硬件系统的核心，用于加工处理各种数据，能完成各种算术、逻辑运算以及控制功能。</p><p>其中，存储器是计算机系统中的记忆设备，分为 <strong>内部存储</strong> 和 <strong>外部存储</strong>。内部存储速度快，但容量小，一般用来临时存放程序、数据及中间结果。而外部存储容量大，但速度慢，能长期保存程序和数据。</p><p>输入和输出设备共称为外部设备，输入设备用于输入原始数据及各种命令，最常见的就是键盘，而输出设备则用于输出计算机运行结果，最常见的就是屏幕。</p><h3 id="cpu-功能" tabindex="-1"><a class="header-anchor" href="#cpu-功能" aria-hidden="true">#</a> CPU 功能</h3><p><code>CPU</code> 是计算机系统的核心部件，负责获取程序指令、对指令译码并加工。其功能主要分为以下 4 点：</p><ol><li><strong>程序控制</strong>：<code>CPU</code> 通过执行指令来控制程序的执行顺序。</li><li><strong>操作控制</strong>：一条指令功能的实现需要若干操作信号配合完成，<code>CPU</code> 产生每条指令的操作信号并将操作信号送往对应部件，控制相应部件按指令功能要求进行操作。</li><li><strong>时间控制</strong>：指令执行过程中操作信号的出现时间、持续时间以及出现的时间顺序都需要严格控制。</li><li><strong>数据处理</strong>：<code>CPU</code> 对数据进行算术和逻辑运算等方式进行加工处理，然后我们就可以利用这些加工后的结果。因此，对数据的加工处理也是 <code>CPU</code> 最根本的任务。</li></ol><p>除开以上 4 点之外，<code>CPU</code> 还需要对系统内外部的中断（异常）做出响应，进行相应处理。</p><h3 id="cpu-组成" tabindex="-1"><a class="header-anchor" href="#cpu-组成" aria-hidden="true">#</a> CPU 组成</h3><p><code>CPU</code> 主要由运算器、控制器、寄存器组以及内部总线等部件组成。</p><figure><img src="'+r+'" alt="CPU 组成结构" tabindex="0" loading="lazy"><figcaption>CPU 组成结构</figcaption></figure><h2 id="运算器" tabindex="-1"><a class="header-anchor" href="#运算器" aria-hidden="true">#</a> 运算器</h2><p>运算器由 <strong>算术逻辑单元（ALU）</strong>、<strong>累加寄存器</strong> 、<strong>数据缓冲寄存器</strong>、<strong>条件寄存器</strong> 共同组成。它是数据加工处理部件，用于完成计算机的各种算术逻辑运算。相对控制器而言，运算器接受控制器的命令而进行动作，即运算器所进行的全部操作均由控制器发出的控制信号来指挥，因此它是执行部件。</p><p>运算器主要功能如下：</p><ol><li>执行所有算术运算，如加、减、乘、除等。</li><li>执行所有的逻辑运算并进行逻辑测试，如与、或、非等。</li></ol><p>此外，运算器的各组成部件功能如下：</p><ol><li><strong>算术逻辑单元（ALU）</strong>：负责处理数据，实现对数据的算术逻辑运算。</li><li><strong>累加寄存器（AC）</strong>：又叫累加器，是一个通用寄存器。当算术逻辑单元执行算术逻辑运算时，为 <code>ALU</code> 提供一个工作区。如，执行一个甲酸运算器，先将一个加数取出暂存在 <code>AC</code> 中，再从内存储器中取出另一个加数，然后同 <code>AC</code> 的内容相加，并将所得结果送回 <code>AC</code>。运算的结果是放在累加器中的，运算器中至少要有一个累加寄存器。</li><li><strong>数据缓存寄存器（DR）</strong>：对内存储器进行读/写时，用 <code>DR</code> 暂存有内存储器读/写的一套指令或一个数据中，将不同时间段内读/写的数据分隔。<code>DR</code> 的主要作用是 <strong>作为 <code>CPU</code> 和内存、外部设备间数据传送的中转站；作为 <code>CPU</code> 和内存、外围设备之间的操作速度上的缓冲；在单累加器结构的运算器中，数据缓冲寄存器还可以兼作为操作数寄存器</strong>。</li><li><strong>状态条件寄存器（PSW）</strong>：保存由算术指令和逻辑指令运行或测试的结果建立的各种条件码内容，主要分为状态标志和控制标志。这些标志通常分别由 1 位出饭前保存，保存了当前指令执行完成后的状态。通常来说，一个算术操作产生一个运算结果，而一个逻辑操作产生一个判决。</li></ol><h2 id="控制器" tabindex="-1"><a class="header-anchor" href="#控制器" aria-hidden="true">#</a> 控制器</h2><p>顾名思义，所谓控制器，就是用来控制整个 <code>CPU</code> 的工作，决定了计算机运行过程的自动化。它不仅要保证程序的正确执行，还要能够处理异常事件。一般包括指令控制逻辑、时序控制逻辑、总线控制逻辑、中断控制逻辑等。</p><p>指令控制逻辑要完成<strong>取指令</strong>、<strong>分支指令</strong>和<strong>执行指令</strong>操作，其过程分为<strong>取指令、指令译码、按指令操作码执行、形成下一条指令地址</strong>等步骤。</p><ol><li><strong>指令寄存器（IR）</strong>：当 <code>CPU</code> 执行一条指令式，先将其从存储器读取到缓冲寄存器中，再送入 <code>IR</code> 暂存，指令译码器根据 <code>IR</code> 内容产生各种未操作指令，控制其他组成部件工作，完成所需功能。</li><li><strong>程序计数器（PC）</strong>：<code>PC</code> 具有<strong>寄存信息和计数</strong>两种功能，又叫指令计数器。程序执行分两种情况，一种是顺序执行，一种是转移执行。程序开始执行前，将程序的起始地址送入 <code>PC</code>，该地址在程序加载到内存时确认，因此 <code>PC</code> 的内容即为程序第一条指令的地址。执行指令时，<code>CPU</code> 自动修改 <code>PC</code> 中的内容，一遍使其保持的总是将要执行的下一条指令的地址。由于大多指令都是按顺序执行，所以修改的过程常只是简单地对 <code>PC</code> 加 <code>1</code>。当遇到转移指令时，后继指令的地址根据当前指令的地址加上一个向前或向后转移的位移量得到，或者根据转移指令给出的直接转移的地址得到。</li><li><strong>地址寄存器（AR）</strong>：<code>AR</code> 保存当前 <code>CPU</code> 所访问的内存单元的地址。由于内存和 <code>CPU</code> 存在操作速度上的差异，因此需要用 <code>AR</code> 保存地址信息，直到内存中的读/写操作完成。</li><li><strong>指令译码器（ID）</strong>：指令包含操作码和地址码，为了能执行任何给定的指令，必须对操作码进行分析，以便识别所完成的操作。指令译码器就是对指令中的操作码字段进行分析解释，识别该指令规定的操作，向操作控制器发出具体的控制信号，控制各部件工作，完成所需功能。</li></ol><p>总结而言，<strong>指令寄存器（IR）存放的是从内存中获取的指令，类似于中间站，用于存放指令。而程序计数器（PC）则存放的是指令的地址，同时还具有计数的功能。地址寄存器（AR）存放的是 <code>CPU</code> 访问内存单元的地址。指令译码器（ID）就是把操作码解析为对应的指令操作</strong>。</p><h2 id="计算机中的基本单位" tabindex="-1"><a class="header-anchor" href="#计算机中的基本单位" aria-hidden="true">#</a> 计算机中的基本单位</h2><table><thead><tr><th>单位</th><th>表示</th><th>说明</th></tr></thead><tbody><tr><td>比特</td><td><code>bit</code></td><td>最小的数据单位</td></tr><tr><td>字节</td><td><code>Byte</code></td><td>最小的存储单位，<code>1 Byte = 8 bit</code></td></tr><tr><td>千字节</td><td><code>KB</code></td><td><code>1 KB = 1024 Byte</code></td></tr><tr><td>兆字节</td><td><code>MB</code></td><td><code>1 MB = 1024 KB</code></td></tr><tr><td>吉字节</td><td><code>GB</code></td><td><code>1 GB = 1024 MB</code></td></tr><tr><td>太字节</td><td><code>TB</code></td><td><code>1 TB = 1024 GB</code></td></tr></tbody></table><h2 id="进制转换" tabindex="-1"><a class="header-anchor" href="#进制转换" aria-hidden="true">#</a> 进制转换</h2><p>计算机中，常见的数据表示有以下几种：</p><ol><li>二进制，以 <code>B</code> 标识，由 <code>0</code>、<code>1</code> 组成，满 <code>2</code> 则进 <code>1</code> 位。</li><li>十进制，以 <code>D</code> 标识，由 <code>0 ~ 9</code> 组成，满 <code>10</code> 则进 <code>1</code> 位。</li><li>八进制，以 <code>O</code> 标识。由 <code>0 ~ 7</code> 组成，满 <code>8</code> 则进 <code>1</code> 位。</li><li>十六进制，以 <code>H</code> 标识。由 <code>0 ~ 9</code> 以及 <code>A、B、C、D、E</code> 组成，满 <code>16</code> 则进 <code>1</code> 位。</li></ol><p>一个十六进制的数要用 <code>4</code> 个二进制的数来表示，而一个八进制需要转成对应 <code>3</code> 个二进制。</p><h2 id="原码、反码、补码、移码" tabindex="-1"><a class="header-anchor" href="#原码、反码、补码、移码" aria-hidden="true">#</a> 原码、反码、补码、移码</h2><p>计算机中，数值是以机器数的形式来表示的，特点是采用了二进制计数法，数的符号用 <code>0</code> 和 <code>1</code> 表示，小数点则银行，表示不占位置，而机器数所对应的实际数值就叫做数的真值。</p><p>机器数又分为<strong>有符号数</strong>和<strong>无符号数</strong>。其中，无符号数对应正数，表示在机器数中没有符号位。对于无符号数，如果约定小数点的位置在机器数的最低位之后，则该数为纯整数。如果约定小数点的位置在机器数的最高位之前，那么这个数是纯小数。对于带符号数，机器数的最高位是表示正、负的符号位，其余位则表示数值。</p><p>为了方便运算，带符号的机器数可以采用原码、反码、补码等不同编码方式，而这些编码方式就叫做码制。</p><h3 id="原码" tabindex="-1"><a class="header-anchor" href="#原码" aria-hidden="true">#</a> 原码</h3><p>原码表示法中，最高位是符号位，其中 <code>0</code> 表示正号，<code>1</code> 表示负号，其余的 <code>n - 1</code> 为则表示数值的绝对值。这里要注意 <code>0</code> 比较特殊，它的原码有两种表示形式：</p>',37),y=s("p",{class:"katex-block"},[s("span",{class:"katex-display"},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("semantics",null,[s("mrow",null,[s("mo",{stretchy:"false"},"["),s("mo",null,"+"),s("mn",null,"0"),s("msub",null,[s("mo",{stretchy:"false"},"]"),s("mtext",null,"原")]),s("mo",null,"="),s("mn",null,"00000000")]),s("annotation",{encoding:"application/x-tex"}," [+0]_\\text{原} = 00000000 ")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mopen"},"["),s("span",{class:"mord"},"+"),s("span",{class:"mord"},"0"),s("span",{class:"mclose"},[s("span",{class:"mclose"},"]"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3283em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord text mtight"},[s("span",{class:"mord cjk_fallback mtight"},"原")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"00000000")])])])])],-1),b=s("p",{class:"katex-block"},[s("span",{class:"katex-display"},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("semantics",null,[s("mrow",null,[s("mo",{stretchy:"false"},"["),s("mo",null,"−"),s("mn",null,"0"),s("msub",null,[s("mo",{stretchy:"false"},"]"),s("mtext",null,"原")]),s("mo",null,"="),s("mn",null,"10000000")]),s("annotation",{encoding:"application/x-tex"}," [-0]_\\text{原} = 10000000 ")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mopen"},"["),s("span",{class:"mord"},"−"),s("span",{class:"mord"},"0"),s("span",{class:"mclose"},[s("span",{class:"mclose"},"]"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3283em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord text mtight"},[s("span",{class:"mord cjk_fallback mtight"},"原")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"10000000")])])])])],-1),x=s("h3",{id:"反码",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#反码","aria-hidden":"true"},"#"),a(" 反码")],-1),v=s("p",null,[a("同样的，反码表示中，最高位仍然是符号位，"),s("code",null,"0"),a(" 表示正号，"),s("code",null,"1"),a(" 表示负号。如果该数是一个正数，那么它的反码和原码相同。而如果该数是一个负数，那么它的反码则是原码除符号位之外的其他位按位取反。"),s("code",null,"0"),a(" 的反码也有两种表示形式：")],-1),f=s("p",{class:"katex-block"},[s("span",{class:"katex-display"},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("semantics",null,[s("mrow",null,[s("mo",{stretchy:"false"},"["),s("mo",null,"+"),s("mn",null,"0"),s("msub",null,[s("mo",{stretchy:"false"},"]"),s("mtext",null,"反")]),s("mo",null,"="),s("mn",null,"00000000")]),s("annotation",{encoding:"application/x-tex"}," [+0]_\\text{反} = 00000000 ")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mopen"},"["),s("span",{class:"mord"},"+"),s("span",{class:"mord"},"0"),s("span",{class:"mclose"},[s("span",{class:"mclose"},"]"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3283em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord text mtight"},[s("span",{class:"mord cjk_fallback mtight"},"反")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"00000000")])])])])],-1),k=s("p",{class:"katex-block"},[s("span",{class:"katex-display"},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("semantics",null,[s("mrow",null,[s("mo",{stretchy:"false"},"["),s("mo",null,"−"),s("mn",null,"0"),s("msub",null,[s("mo",{stretchy:"false"},"]"),s("mtext",null,"反")]),s("mo",null,"="),s("mn",null,"11111111")]),s("annotation",{encoding:"application/x-tex"}," [-0]_\\text{反} = 11111111 ")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mopen"},"["),s("span",{class:"mord"},"−"),s("span",{class:"mord"},"0"),s("span",{class:"mclose"},[s("span",{class:"mclose"},"]"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3283em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord text mtight"},[s("span",{class:"mord cjk_fallback mtight"},"反")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"11111111")])])])])],-1),w=s("h3",{id:"补码",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#补码","aria-hidden":"true"},"#"),a(" 补码")],-1),z=s("p",null,[a("补码中，最高位为符号位，"),s("code",null,"0"),a(" 表示正号，"),s("code",null,"1"),a(" 表示负号。如果一个数是正数，那么它的补码与原码和反码一样。而如果一个数为负数，则补码为反码末位加 "),s("code",null,"1"),a("。此时 "),s("code",null,"0"),a(" 有惟一的编码表示。")],-1),_=s("p",{class:"katex-block"},[s("span",{class:"katex-display"},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("semantics",null,[s("mrow",null,[s("mo",{stretchy:"false"},"["),s("mo",null,"+"),s("mn",null,"0"),s("msub",null,[s("mo",{stretchy:"false"},"]"),s("mtext",null,"补")]),s("mo",null,"="),s("mo",{stretchy:"false"},"["),s("mo",null,"−"),s("mn",null,"0"),s("msub",null,[s("mo",{stretchy:"false"},"]"),s("mtext",null,"补")]),s("mo",null,"="),s("mn",null,"00000000")]),s("annotation",{encoding:"application/x-tex"}," [+0]_\\text{补} = [-0]_\\text{补} = 00000000 ")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mopen"},"["),s("span",{class:"mord"},"+"),s("span",{class:"mord"},"0"),s("span",{class:"mclose"},[s("span",{class:"mclose"},"]"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3283em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord text mtight"},[s("span",{class:"mord cjk_fallback mtight"},"补")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mopen"},"["),s("span",{class:"mord"},"−"),s("span",{class:"mord"},"0"),s("span",{class:"mclose"},[s("span",{class:"mclose"},"]"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3283em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord text mtight"},[s("span",{class:"mord cjk_fallback mtight"},"补")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"00000000")])])])])],-1),M=l('<h3 id="移码" tabindex="-1"><a class="header-anchor" href="#移码" aria-hidden="true">#</a> 移码</h3><p>移码的表示与补码有很大关系，它就是将一个数的补码的符号位取反即可。如 <code>+1</code> 的补码为 <code>00000001</code>，那么它的移码为 <code>10000001</code>。</p><h3 id="注意" tabindex="-1"><a class="header-anchor" href="#注意" aria-hidden="true">#</a> 注意</h3><p>当机器字长为 <code>n</code> 时，此时该机器中各种码制所表示的带符号数的范围如下：</p>',4),C=s("table",null,[s("thead",null,[s("tr",null,[s("th",null,"码制"),s("th",null,"定点整数"),s("th",null,"定点小数")])]),s("tbody",null,[s("tr",null,[s("td",null,"原码"),s("td",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mo",null,"−"),s("mo",{stretchy:"false"},"("),s("msup",null,[s("mn",null,"2"),s("mrow",null,[s("mi",null,"n"),s("mo",null,"−"),s("mn",null,"1")])]),s("mo",null,"−"),s("mn",null,"1"),s("mo",{stretchy:"false"},")"),s("mo",null,"∼"),s("mo",{stretchy:"false"},"("),s("msup",null,[s("mn",null,"2"),s("mrow",null,[s("mi",null,"n"),s("mo",null,"−"),s("mn",null,"1")])]),s("mo",null,"−"),s("mn",null,"1"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"-(2^{n-1}-1)\\sim(2^{n-1}-1)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.0641em","vertical-align":"-0.25em"}}),s("span",{class:"mord"},"−"),s("span",{class:"mopen"},"("),s("span",{class:"mord"},[s("span",{class:"mord"},"2"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8141em"}},[s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"n"),s("span",{class:"mbin mtight"},"−"),s("span",{class:"mord mtight"},"1")])])])])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"−"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord"},"1"),s("span",{class:"mclose"},")"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"∼"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.0641em","vertical-align":"-0.25em"}}),s("span",{class:"mopen"},"("),s("span",{class:"mord"},[s("span",{class:"mord"},"2"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8141em"}},[s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"n"),s("span",{class:"mbin mtight"},"−"),s("span",{class:"mord mtight"},"1")])])])])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"−"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord"},"1"),s("span",{class:"mclose"},")")])])])]),s("td",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mo",null,"−"),s("mo",{stretchy:"false"},"("),s("mn",null,"1"),s("mo",null,"−"),s("msup",null,[s("mn",null,"2"),s("mrow",null,[s("mo",null,"−"),s("mo",{stretchy:"false"},"("),s("mi",null,"n"),s("mo",null,"−"),s("mn",null,"1"),s("mo",{stretchy:"false"},")")])]),s("mo",{stretchy:"false"},")"),s("mo",null,"∼"),s("mo",{stretchy:"false"},"("),s("mn",null,"1"),s("mo",null,"−"),s("msup",null,[s("mn",null,"2"),s("mrow",null,[s("mo",null,"−"),s("mo",{stretchy:"false"},"("),s("mi",null,"n"),s("mo",null,"−"),s("mn",null,"1"),s("mo",{stretchy:"false"},")")])]),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"-(1-2^{-(n-1)})\\sim(1-2^{-(n-1)})")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord"},"−"),s("span",{class:"mopen"},"("),s("span",{class:"mord"},"1"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"−"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.138em","vertical-align":"-0.25em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"2"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.888em"}},[s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mtight"},"−"),s("span",{class:"mopen mtight"},"("),s("span",{class:"mord mathnormal mtight"},"n"),s("span",{class:"mbin mtight"},"−"),s("span",{class:"mord mtight"},"1"),s("span",{class:"mclose mtight"},")")])])])])])])])]),s("span",{class:"mclose"},")"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"∼"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mopen"},"("),s("span",{class:"mord"},"1"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"−"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.138em","vertical-align":"-0.25em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"2"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.888em"}},[s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mtight"},"−"),s("span",{class:"mopen mtight"},"("),s("span",{class:"mord mathnormal mtight"},"n"),s("span",{class:"mbin mtight"},"−"),s("span",{class:"mord mtight"},"1"),s("span",{class:"mclose mtight"},")")])])])])])])])]),s("span",{class:"mclose"},")")])])])])]),s("tr",null,[s("td",null,"反码"),s("td",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mo",null,"−"),s("mo",{stretchy:"false"},"("),s("msup",null,[s("mn",null,"2"),s("mrow",null,[s("mi",null,"n"),s("mo",null,"−"),s("mn",null,"1")])]),s("mo",null,"−"),s("mn",null,"1"),s("mo",{stretchy:"false"},")"),s("mo",null,"∼"),s("mo",{stretchy:"false"},"("),s("msup",null,[s("mn",null,"2"),s("mrow",null,[s("mi",null,"n"),s("mo",null,"−"),s("mn",null,"1")])]),s("mo",null,"−"),s("mn",null,"1"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"-(2^{n-1}-1)\\sim(2^{n-1}-1)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.0641em","vertical-align":"-0.25em"}}),s("span",{class:"mord"},"−"),s("span",{class:"mopen"},"("),s("span",{class:"mord"},[s("span",{class:"mord"},"2"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8141em"}},[s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"n"),s("span",{class:"mbin mtight"},"−"),s("span",{class:"mord mtight"},"1")])])])])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"−"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord"},"1"),s("span",{class:"mclose"},")"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"∼"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.0641em","vertical-align":"-0.25em"}}),s("span",{class:"mopen"},"("),s("span",{class:"mord"},[s("span",{class:"mord"},"2"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8141em"}},[s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"n"),s("span",{class:"mbin mtight"},"−"),s("span",{class:"mord mtight"},"1")])])])])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"−"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord"},"1"),s("span",{class:"mclose"},")")])])])]),s("td",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mo",null,"−"),s("mo",{stretchy:"false"},"("),s("mn",null,"1"),s("mo",null,"−"),s("msup",null,[s("mn",null,"2"),s("mrow",null,[s("mo",null,"−"),s("mo",{stretchy:"false"},"("),s("mi",null,"n"),s("mo",null,"−"),s("mn",null,"1"),s("mo",{stretchy:"false"},")")])]),s("mo",{stretchy:"false"},")"),s("mo",null,"∼"),s("mo",{stretchy:"false"},"("),s("mn",null,"1"),s("mo",null,"−"),s("msup",null,[s("mn",null,"2"),s("mrow",null,[s("mo",null,"−"),s("mo",{stretchy:"false"},"("),s("mi",null,"n"),s("mo",null,"−"),s("mn",null,"1"),s("mo",{stretchy:"false"},")")])]),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"-(1-2^{-(n-1)})\\sim(1-2^{-(n-1)})")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord"},"−"),s("span",{class:"mopen"},"("),s("span",{class:"mord"},"1"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"−"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.138em","vertical-align":"-0.25em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"2"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.888em"}},[s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mtight"},"−"),s("span",{class:"mopen mtight"},"("),s("span",{class:"mord mathnormal mtight"},"n"),s("span",{class:"mbin mtight"},"−"),s("span",{class:"mord mtight"},"1"),s("span",{class:"mclose mtight"},")")])])])])])])])]),s("span",{class:"mclose"},")"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"∼"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mopen"},"("),s("span",{class:"mord"},"1"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"−"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.138em","vertical-align":"-0.25em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"2"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.888em"}},[s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mtight"},"−"),s("span",{class:"mopen mtight"},"("),s("span",{class:"mord mathnormal mtight"},"n"),s("span",{class:"mbin mtight"},"−"),s("span",{class:"mord mtight"},"1"),s("span",{class:"mclose mtight"},")")])])])])])])])]),s("span",{class:"mclose"},")")])])])])]),s("tr",null,[s("td",null,"补码"),s("td",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mo",null,"−"),s("mo",{stretchy:"false"},"("),s("msup",null,[s("mn",null,"2"),s("mrow",null,[s("mi",null,"n"),s("mo",null,"−"),s("mn",null,"1")])]),s("mo",{stretchy:"false"},")"),s("mo",null,"∼"),s("mo",{stretchy:"false"},"("),s("msup",null,[s("mn",null,"2"),s("mrow",null,[s("mi",null,"n"),s("mo",null,"−"),s("mn",null,"1")])]),s("mo",null,"−"),s("mn",null,"1"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"-(2^{n-1})\\sim(2^{n-1}-1)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.0641em","vertical-align":"-0.25em"}}),s("span",{class:"mord"},"−"),s("span",{class:"mopen"},"("),s("span",{class:"mord"},[s("span",{class:"mord"},"2"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8141em"}},[s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"n"),s("span",{class:"mbin mtight"},"−"),s("span",{class:"mord mtight"},"1")])])])])])])])]),s("span",{class:"mclose"},")"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"∼"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.0641em","vertical-align":"-0.25em"}}),s("span",{class:"mopen"},"("),s("span",{class:"mord"},[s("span",{class:"mord"},"2"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8141em"}},[s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"n"),s("span",{class:"mbin mtight"},"−"),s("span",{class:"mord mtight"},"1")])])])])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"−"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord"},"1"),s("span",{class:"mclose"},")")])])])]),s("td",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mo",null,"−"),s("mn",null,"1"),s("mo",null,"∼"),s("mo",{stretchy:"false"},"("),s("mn",null,"1"),s("mo",null,"−"),s("msup",null,[s("mn",null,"2"),s("mrow",null,[s("mo",null,"−"),s("mo",{stretchy:"false"},"("),s("mi",null,"n"),s("mo",null,"−"),s("mn",null,"1"),s("mo",{stretchy:"false"},")")])]),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"-1\\sim(1-2^{-(n-1)})")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7278em","vertical-align":"-0.0833em"}}),s("span",{class:"mord"},"−"),s("span",{class:"mord"},"1"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"∼"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mopen"},"("),s("span",{class:"mord"},"1"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"−"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.138em","vertical-align":"-0.25em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"2"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.888em"}},[s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mtight"},"−"),s("span",{class:"mopen mtight"},"("),s("span",{class:"mord mathnormal mtight"},"n"),s("span",{class:"mbin mtight"},"−"),s("span",{class:"mord mtight"},"1"),s("span",{class:"mclose mtight"},")")])])])])])])])]),s("span",{class:"mclose"},")")])])])])]),s("tr",null,[s("td",null,"移码"),s("td",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mo",null,"−"),s("mo",{stretchy:"false"},"("),s("msup",null,[s("mn",null,"2"),s("mrow",null,[s("mi",null,"n"),s("mo",null,"−"),s("mn",null,"1")])]),s("mo",{stretchy:"false"},")"),s("mo",null,"∼"),s("mo",{stretchy:"false"},"("),s("msup",null,[s("mn",null,"2"),s("mrow",null,[s("mi",null,"n"),s("mo",null,"−"),s("mn",null,"1")])]),s("mo",null,"−"),s("mn",null,"1"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"-(2^{n-1})\\sim(2^{n-1}-1)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.0641em","vertical-align":"-0.25em"}}),s("span",{class:"mord"},"−"),s("span",{class:"mopen"},"("),s("span",{class:"mord"},[s("span",{class:"mord"},"2"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8141em"}},[s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"n"),s("span",{class:"mbin mtight"},"−"),s("span",{class:"mord mtight"},"1")])])])])])])])]),s("span",{class:"mclose"},")"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"∼"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.0641em","vertical-align":"-0.25em"}}),s("span",{class:"mopen"},"("),s("span",{class:"mord"},[s("span",{class:"mord"},"2"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8141em"}},[s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"n"),s("span",{class:"mbin mtight"},"−"),s("span",{class:"mord mtight"},"1")])])])])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"−"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord"},"1"),s("span",{class:"mclose"},")")])])])]),s("td",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mo",null,"−"),s("mn",null,"1"),s("mo",null,"∼"),s("mo",{stretchy:"false"},"("),s("mn",null,"1"),s("mo",null,"−"),s("msup",null,[s("mn",null,"2"),s("mrow",null,[s("mo",null,"−"),s("mo",{stretchy:"false"},"("),s("mi",null,"n"),s("mo",null,"−"),s("mn",null,"1"),s("mo",{stretchy:"false"},")")])]),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"-1\\sim(1-2^{-(n-1)})")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7278em","vertical-align":"-0.0833em"}}),s("span",{class:"mord"},"−"),s("span",{class:"mord"},"1"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"∼"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mopen"},"("),s("span",{class:"mord"},"1"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"−"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.138em","vertical-align":"-0.25em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"2"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.888em"}},[s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mtight"},"−"),s("span",{class:"mopen mtight"},"("),s("span",{class:"mord mathnormal mtight"},"n"),s("span",{class:"mbin mtight"},"−"),s("span",{class:"mord mtight"},"1"),s("span",{class:"mclose mtight"},")")])])])])])])])]),s("span",{class:"mclose"},")")])])])])])])],-1),P=l('<p>在做相关题目时，可以记住以下要点：<strong>当给定一个数的补码求它的原码时，先将这个数补码的反码求出来，然后再求出它反码的补码，此时得到的就是这个数的原码。</strong></p><h2 id="浮点数" tabindex="-1"><a class="header-anchor" href="#浮点数" aria-hidden="true">#</a> 浮点数</h2><p>当机器字长为 <code>n</code> 时，定点数的补码和移码可以表示为 <code>2^n</code> 个数，而其原码和反码只能表示 <code>2^n - 1</code> 个数（<code>0</code> 的表示占了两个编码）。因此定点数能表示的数值范围较小，运算时很容易越界溢出。而浮点数是小数点范围不固定的数，能表示的范围更大。</p><p>浮点表示法中，阶码是带符号的纯整数，而位数是带符号的纯小数。浮点数的表示格式如下：</p><figure><img src="'+o+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>',5),R=s("p",{class:"katex-block"},[s("span",{class:"katex-display"},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("semantics",null,[s("mrow",null,[s("mi",null,"N"),s("mo",null,"="),s("msup",null,[s("mn",null,"2"),s("mi",null,"E")]),s("mo",null,"×"),s("mi",null,"F")]),s("annotation",{encoding:"application/x-tex"}," N = 2^E×F ")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"N"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.9747em","vertical-align":"-0.0833em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"2"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8913em"}},[s("span",{style:{top:"-3.113em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.05764em"}},"E")])])])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"×"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"F")])])])])],-1),U=l("<p>其中 <code>E</code> 称为阶码，<code>F</code> 称为尾数。</p><p>一个数的浮点表示不是唯一的。当小数点的位置改变时，阶码也会随之改变，因此一个数可以用多个浮点形式表示。</p><p>浮点数所能表示的数值范围主要由阶码决定，而其表示的精度则由尾数决定。为了充分利用尾数来表示更多的有效数字，常采用规格化浮点数。规格化就是将尾数的绝对值限定在 <code>[0.5, 1]</code>。此外，当尾数用补码表示时，需要注意以下问题：</p><ol><li>若位数 <code>F &gt;= 0</code>，则其规格化的位数形式为 <code>F = 0.1xxx……x</code>，其中 <code>x</code> 既可以为 <code>0</code>，也以为 <code>1</code>，即将尾数限定在 <code>[0.5, 1]</code>。</li><li>若尾数 <code>F &lt; 0</code>，则其规格化的尾数形式为 <code>F = 1.0xxx……x</code>，其中 <code>x</code> 可以为 <code>0</code>，也可以为 <code>1</code>，即将限定在 <code>[-1, -0.5]</code>。</li></ol><p>若浮点数的阶码（包括 <code>1</code> 位阶符）用 <code>R</code> 位的移码表示，尾数（包括 <code>1</code> 位数符）用 <code>M</code> 位的补码表示，则该浮点数的范围为：</p>",5),B=s("p",{class:"katex-block"},[s("span",{class:"katex-display"},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("semantics",null,[s("mrow",null,[s("mo",null,"−"),s("mn",null,"1"),s("mo",null,"∗"),s("msup",null,[s("mn",null,"2"),s("mrow",null,[s("mo",{stretchy:"false"},"("),s("msup",null,[s("mn",null,"2"),s("mrow",null,[s("mi",null,"R"),s("mo",null,"−"),s("mn",null,"1")])]),s("mo",null,"−"),s("mn",null,"1"),s("mo",{stretchy:"false"},")")])]),s("mo",null,"∼"),s("mo",{stretchy:"false"},"("),s("mn",null,"1"),s("mo",null,"−"),s("msup",null,[s("mn",null,"2"),s("mrow",null,[s("mn",null,"1"),s("mo",null,"−"),s("mi",null,"M")])]),s("mo",null,"∗"),s("msup",null,[s("mn",null,"2"),s("mrow",null,[s("msup",null,[s("mn",null,"2"),s("mrow",null,[s("mi",null,"R"),s("mo",null,"−"),s("mn",null,"1")])]),s("mo",null,"−"),s("mn",null,"1")])]),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"}," -1*2^{(2^{R-1}-1)}\\sim(1-2^{1-M}*2^{2^{R-1}-1}) ")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7278em","vertical-align":"-0.0833em"}}),s("span",{class:"mord"},"−"),s("span",{class:"mord"},"1"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"∗"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.0564em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"2"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.0564em"}},[s("span",{style:{top:"-3.113em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mopen mtight"},"("),s("span",{class:"mord mtight"},[s("span",{class:"mord mtight"},"2"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.9191em"}},[s("span",{style:{top:"-2.931em","margin-right":"0.0714em"}},[s("span",{class:"pstrut",style:{height:"2.5em"}}),s("span",{class:"sizing reset-size3 size1 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.00773em"}},"R"),s("span",{class:"mbin mtight"},"−"),s("span",{class:"mord mtight"},"1")])])])])])])])]),s("span",{class:"mbin mtight"},"−"),s("span",{class:"mord mtight"},"1"),s("span",{class:"mclose mtight"},")")])])])])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"∼"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mopen"},"("),s("span",{class:"mord"},"1"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"−"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8913em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"2"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8913em"}},[s("span",{style:{top:"-3.113em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mtight"},"1"),s("span",{class:"mbin mtight"},"−"),s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.10903em"}},"M")])])])])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"∗"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.3064em","vertical-align":"-0.25em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"2"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.0564em"}},[s("span",{style:{top:"-3.113em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mtight"},"2"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.9191em"}},[s("span",{style:{top:"-2.931em","margin-right":"0.0714em"}},[s("span",{class:"pstrut",style:{height:"2.5em"}}),s("span",{class:"sizing reset-size3 size1 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.00773em"}},"R"),s("span",{class:"mbin mtight"},"−"),s("span",{class:"mord mtight"},"1")])])])])])])])]),s("span",{class:"mbin mtight"},"−"),s("span",{class:"mord mtight"},"1")])])])])])])])]),s("span",{class:"mclose"},")")])])])])],-1),L=l('<h2 id="寻址方式" tabindex="-1"><a class="header-anchor" href="#寻址方式" aria-hidden="true">#</a> 寻址方式</h2><figure><img src="'+h+'" alt="存储系统层次结构" tabindex="0" loading="lazy"><figcaption>存储系统层次结构</figcaption></figure><p>常用的寻址方式：</p><ol><li><strong>立即寻址</strong>：操作数包含在指令中。</li><li><strong>直接寻址</strong>：操作数存放于内存单元，指令中直接给出操作数所在存储单元的地址。</li><li><strong>寄存器寻址</strong>：操作数放在某一寄存器中，指令中给出存放操作数的寄存器名。</li><li><strong>寄存器间接寻址</strong>：操作数存放于内存单元，操作数所在存储单元的地址在某个寄存器中。</li><li><strong>间接寻址</strong>：指令中给出操作数地址的地址。</li><li><strong>相对寻址</strong>：指令地址码给出的是一个偏移量（可正可负），操作数地址等于本条指令的地址加上该偏移量。</li><li><strong>变址寻址</strong>：操作数地址等于变址寄存器的内容加偏移量。</li></ol><p>寻址速度由高到低：<strong>立即寻址</strong> &gt; <strong>寄存器寻址</strong> &gt; <strong>直接寻址</strong> &gt; <strong>寄存器间接寻址</strong> &gt; <strong>间接寻址</strong></p><h2 id="校验码" tabindex="-1"><a class="header-anchor" href="#校验码" aria-hidden="true">#</a> 校验码</h2><p>所谓码距，指的是一个编码系统中任意两个合法编码间至少有多少个二进制位不同。</p><h3 id="奇偶校验码" tabindex="-1"><a class="header-anchor" href="#奇偶校验码" aria-hidden="true">#</a> 奇偶校验码</h3><p>奇偶校验是一种简单有效的校验方法，通过在编码中增加一位校验位来使编码中 <code>1</code> 的个数为奇数（奇校验）或偶数（偶校验），从而使码距变为 <code>2</code>。对于奇校验，可以检测代码中奇数位出错的编码，但不能发现偶数位出错的情况，即当合法编码中的奇数位发生错误时，编码中的 <code>1</code> 变成了 <code>0</code> 或者 <code>0</code> 变成 <code>1</code>，则该编码中 <code>1</code> 的个数的奇偶性就发生了变化，从而可以发现错误。</p><p>常见的奇偶校验码有三种：<strong>水平奇偶校验码</strong>、<strong>垂直奇偶校验码</strong>、<strong>水平垂直校验码</strong></p><p><strong>注意</strong>：奇偶校验码只能检查错误但是不能纠错，而且奇数校验只能检查出代码奇数个出错的编码，而不能检查出偶数个出错的编码。</p><h3 id="海明码" tabindex="-1"><a class="header-anchor" href="#海明码" aria-hidden="true">#</a> 海明码</h3><p>海明码由贝尔实验室的 <em>Richard Hamming</em> 设计，一种通过利用奇偶校验性来检错和纠错的校验方法。海明码的构成方法是在数据位之间的特定位置上插入 <code>k</code> 个校验位，通过扩大码距来实现检错和纠错。</p><p>假设数据位为 <code>n</code> 位，校验位为 <code>k</code> 位，则 <code>n</code> 和 <code>k</code> 必须满足以下条件：</p>',14),A=s("p",{class:"katex-block"},[s("span",{class:"katex-display"},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("semantics",null,[s("mrow",null,[s("msup",null,[s("mn",null,"2"),s("mi",null,"k")]),s("mo",null,">"),s("mo",null,"="),s("mi",null,"n"),s("mo",null,"+"),s("mi",null,"k"),s("mo",null,"+"),s("mn",null,"1")]),s("annotation",{encoding:"application/x-tex"}," 2^k>= n + k + 1 ")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.9382em","vertical-align":"-0.0391em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"2"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8991em"}},[s("span",{style:{top:"-3.113em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.03148em"}},"k")])])])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},">="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6667em","vertical-align":"-0.0833em"}}),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"+"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7778em","vertical-align":"-0.0833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03148em"}},"k"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"+"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"1")])])])])],-1),I=l('<h3 id="循环冗余校验码-crc" tabindex="-1"><a class="header-anchor" href="#循环冗余校验码-crc" aria-hidden="true">#</a> 循环冗余校验码（CRC）</h3><p>循环冗余码常用于数据通信领域和磁介质存储系统，利用生成多项式为 <code>k</code> 个数据位产生 <code>r</code> 个校验位来进行编码，其编码长度为 <code>k + r</code>，<code>CRC</code> 的代码格式为：</p><figure><img src="'+d+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>循环冗余校验码由两部分组成，左边是<strong>信息码（数据）</strong>，右边是<strong>校验码</strong>，如果信息码占 <code>k</code> 位，则校验码占 <code>n - k</code> 位。其中 <code>n</code> 是 <code>CRC</code> 码的字长，所以又叫 <code>(n, k)</code> 码。校验码由信息码产生，校验码位数越多，代码校验能力越强。在求 <code>CRC</code> 编码时，才用的是模 <code>2</code> 运算。模 <code>2</code> 加减运算的规则是按位运算，不发生借位和进位。要注意，当码距为 <code>2</code> 时，<code>CRC</code> 只能检错而不能纠错。</p><h2 id="cisc-risc" tabindex="-1"><a class="header-anchor" href="#cisc-risc" aria-hidden="true">#</a> CISC &amp; RISC</h2><table><thead><tr><th></th><th>RISC（精简指令集计算机）</th><th>CISC（复杂指令集计算机）</th></tr></thead><tbody><tr><td>指令种类</td><td>少、精简</td><td>多、复杂</td></tr><tr><td>指令复杂度</td><td>低</td><td>高</td></tr><tr><td>指令长度</td><td>固定</td><td>变化</td></tr><tr><td>寻址方式</td><td>少</td><td>复杂多样</td></tr><tr><td>译码方式</td><td>硬布线控制逻辑（组合逻辑控制器）</td><td>微程序控制技术</td></tr><tr><td>通用寄存器数量</td><td>多、大量</td><td>一般</td></tr><tr><td>流水线技术</td><td>支持</td><td>不支持</td></tr></tbody></table><h2 id="流水线" tabindex="-1"><a class="header-anchor" href="#流水线" aria-hidden="true">#</a> 流水线</h2><p><strong>吞吐率 = 指令条数 / (一条完整指令的时间 + (n - 1) * 流水线周期)</strong></p><p><strong>流水线总共时间 = 一条完整指令的时间 + (n - 1) * 流水线周期</strong></p><h2 id="⏳-联系" tabindex="-1"><a class="header-anchor" href="#⏳-联系" aria-hidden="true">#</a> ⏳ 联系</h2><p>想解锁更多知识？不妨关注我的微信公众号：<strong>村雨遥（id：JavaPark）</strong>。</p><p>扫一扫，探索另一个全新的世界。</p><figure><img src="'+n+'" alt="" width="150" tabindex="0" loading="lazy"><figcaption></figcaption></figure>',13);function N(S,F){const t=m("Share");return c(),i("div",null,[u,y,b,x,v,f,k,w,z,_,M,C,P,R,U,B,L,A,I,p(t,{colorful:""})])}const K=e(g,[["render",N],["__file","20221024-computer-system.html.vue"]]);export{K as default};
